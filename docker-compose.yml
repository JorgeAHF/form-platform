services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  mongo:
    image: mongo:6
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongodata:/data/db
    ports:
      - "27017:27017"
    restart: unless-stopped

  formio:
    # Sugerencia: fija un tag estable cuando cierres dev (ej. formio/formio:2.7.x)
    image: formio/formio:rc
    container_name: formio-ce
    environment:
      DEBUG: "formio:*"
      ROOT_EMAIL: ${FORMIO_ROOT_EMAIL}
      ROOT_PASSWORD: ${FORMIO_ROOT_PASSWORD}
      NODE_CONFIG: |
        {
          "mongo": "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/formio-ce?authSource=admin",
          "port": 3001,
          "jwt": { "secret": "${FORMIO_JWT_SECRET}" }
        }
    depends_on:
      - mongo
    ports:
      - "3001:3001"
    restart: unless-stopped

  api:
    build: ./backend
    command: uvicorn app:app --host 0.0.0.0 --port 8000 --reload
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      FILES_ROOT: /data
      MAX_FILE_MB: ${MAX_FILE_MB}
      ALLOWED_EXT: ${ALLOWED_EXT}
      JWT_SECRET: ${API_JWT_SECRET}
      # Importante para CORS (Form.io y React dev server):
      ALLOWED_ORIGINS: "http://localhost:3001,http://localhost:5173"
      AUTOSEED_ENABLE: ${AUTOSEED_ENABLE}
      AUTOSEED_PATH: /app/seed.json
      AUTOSNAPSHOT_ON_UPLOAD: ${AUTOSNAPSHOT_ON_UPLOAD}
    volumes:
      - ./backend:/app
      - ./storage:/data
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  web:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    environment:
      # Vite + Docker en Windows: poll para que detecte cambios
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    ports:
      - "5173:5173"
    volumes:
      - ./web:/app
      - web_node_modules:/app/node_modules
    depends_on:
      - api
    restart: unless-stopped

volumes:
  pgdata:
  mongodata:
  web_node_modules: