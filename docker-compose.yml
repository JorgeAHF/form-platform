services:
  postgres:
    image: postgres:16.4
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped


  api:
    build: ./backend
    # ENTRYPOINT en la imagen ya ejecuta ``uvicorn app:app``,
    # por lo que solo se pasan las opciones adicionales aquí.
    command: ["--host", "0.0.0.0", "--port", "8000", "--reload"]
    environment:
      DATABASE_URL: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      FILES_ROOT: /data
      MAX_FILE_MB: ${MAX_FILE_MB}
      ALLOWED_EXT: ${ALLOWED_EXT}
      JWT_SECRET: ${JWT_SECRET}
      # Orígenes permitidos para CORS (separados por comas)
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      AUTOSEED_ENABLE: ${AUTOSEED_ENABLE}
      AUTOSEED_PATH: /app/seed.json
      AUTOSNAPSHOT_ON_UPLOAD: ${AUTOSNAPSHOT_ON_UPLOAD}
    volumes:
      - ./backend:/app
      - ./storage:/data
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  web:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    environment:
      # Vite + Docker en Windows: poll para que detecte cambios
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    ports:
      - "5173:5173"
    volumes:
      - ./web:/app
      - web_node_modules:/app/node_modules
    depends_on:
      - api
    restart: unless-stopped

volumes:
  pgdata:
  web_node_modules: